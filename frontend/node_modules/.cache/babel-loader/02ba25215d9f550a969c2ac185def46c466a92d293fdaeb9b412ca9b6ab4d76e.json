{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ideep\\\\OneDrive\\\\Desktop\\\\New folder\\\\InfoPulse\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [youtubeResults, setYoutubeResults] = useState([]);\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [loading, setLoading] = useState(false); // Loading state\n//   const [error, setError] = useState(''); // Error state\n\n//   const handleSearch = async () => {\n//     // Prevent empty search\n//     if (!searchTerm.trim()) {\n//       alert('Please enter a search term');\n//       return;\n//     }\n\n//     setLoading(true); // Start loading\n//     setError(''); // Clear previous errors\n\n//     try {\n//       // Fetch YouTube Data\n//       const youtubeResponse = await axios.get(\n//         `http://localhost:5000/api/search/youtube`, \n//         { params: { q: searchTerm } }\n//       );\n//       setYoutubeResults(youtubeResponse.data);\n\n//       // Fetch Google Custom Search Data\n//       const searchResponse = await axios.get(\n//         `http://localhost:5000/api/search/google`,\n//         { params: { q: searchTerm } }\n//       );\n//       setSearchResults(searchResponse.data);\n//     } catch (error) {\n//       console.error('Error fetching data', error);\n//       setError('Failed to fetch data. Please try again later.');\n//     } finally {\n//       setLoading(false); // Stop loading\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1 className=\"app-title\">InfoPulse Search</h1>\n//       <div className=\"search-container\">\n//         <input\n//           type=\"text\"\n//           className=\"search-input\"\n//           placeholder=\"Search for videos, articles, papers...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n//       </div>\n\n//       {/* Loading Indicator */}\n//       {loading && <p>Loading...</p>}\n\n//       {/* Error Message */}\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       <div className=\"results-container\">\n//         <h2>YouTube Results</h2>\n//         {youtubeResults.length > 0 ? (\n//           youtubeResults.map((video) => (\n//             <div key={video.id.videoId} className=\"result-card\">\n//               <h3>{video.snippet.title}</h3>\n//               <p>{video.snippet.description}</p>\n//               <a\n//                 href={`https://www.youtube.com/watch?v=${video.id.videoId}`}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//               >\n//                 Watch Video\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No YouTube results found.</p>\n//         )}\n\n//         <h2>Search Results</h2>\n//         {searchResults.length > 0 ? (\n//           searchResults.map((result) => (\n//             <div key={result.link} className=\"result-card\">\n//               <h3>{result.title}</h3>\n//               <p>{result.snippet}</p>\n//               <a href={result.link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 Read More\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No search results found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ResultCard from './components/ResultCard'; // New component for result cards\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/search/all`, {\n        params: {\n          q: searchTerm\n        }\n      });\n      console.log(\"app.js res\", response);\n      setResults(response.data);\n    } catch (error) {\n      console.error('Error fetching data', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"InfoPulse Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"search-input\",\n        placeholder: \"Search for videos, articles, papers...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-container\",\n      children: results.map((result, index) => /*#__PURE__*/_jsxDEV(ResultCard, {\n        result: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"F0bopYfEF/j1/KEMRiNxHM8O8oM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","ResultCard","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","results","setResults","handleSearch","response","get","params","q","console","log","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","result","index","_c","$RefreshReg$"],"sources":["C:/Users/ideep/OneDrive/Desktop/New folder/InfoPulse/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [youtubeResults, setYoutubeResults] = useState([]);\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [loading, setLoading] = useState(false); // Loading state\n//   const [error, setError] = useState(''); // Error state\n\n//   const handleSearch = async () => {\n//     // Prevent empty search\n//     if (!searchTerm.trim()) {\n//       alert('Please enter a search term');\n//       return;\n//     }\n\n//     setLoading(true); // Start loading\n//     setError(''); // Clear previous errors\n\n//     try {\n//       // Fetch YouTube Data\n//       const youtubeResponse = await axios.get(\n//         `http://localhost:5000/api/search/youtube`, \n//         { params: { q: searchTerm } }\n//       );\n//       setYoutubeResults(youtubeResponse.data);\n\n//       // Fetch Google Custom Search Data\n//       const searchResponse = await axios.get(\n//         `http://localhost:5000/api/search/google`,\n//         { params: { q: searchTerm } }\n//       );\n//       setSearchResults(searchResponse.data);\n//     } catch (error) {\n//       console.error('Error fetching data', error);\n//       setError('Failed to fetch data. Please try again later.');\n//     } finally {\n//       setLoading(false); // Stop loading\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1 className=\"app-title\">InfoPulse Search</h1>\n//       <div className=\"search-container\">\n//         <input\n//           type=\"text\"\n//           className=\"search-input\"\n//           placeholder=\"Search for videos, articles, papers...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n//       </div>\n\n//       {/* Loading Indicator */}\n//       {loading && <p>Loading...</p>}\n\n//       {/* Error Message */}\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       <div className=\"results-container\">\n//         <h2>YouTube Results</h2>\n//         {youtubeResults.length > 0 ? (\n//           youtubeResults.map((video) => (\n//             <div key={video.id.videoId} className=\"result-card\">\n//               <h3>{video.snippet.title}</h3>\n//               <p>{video.snippet.description}</p>\n//               <a\n//                 href={`https://www.youtube.com/watch?v=${video.id.videoId}`}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//               >\n//                 Watch Video\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No YouTube results found.</p>\n//         )}\n\n//         <h2>Search Results</h2>\n//         {searchResults.length > 0 ? (\n//           searchResults.map((result) => (\n//             <div key={result.link} className=\"result-card\">\n//               <h3>{result.title}</h3>\n//               <p>{result.snippet}</p>\n//               <a href={result.link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 Read More\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No search results found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport ResultCard from './components/ResultCard'; // New component for result cards\n\nfunction App() {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [results, setResults] = useState([]);\n\n    const handleSearch = async () => {\n        try {\n            const response = await axios.get(`http://localhost:5000/api/search/all`, {\n                params: { q: searchTerm }\n            });\n            console.log(\"app.js res\",response)\n            setResults(response.data);\n        } catch (error) {\n            console.error('Error fetching data', error);\n        }\n    };\n\n    return (\n        <div className=\"app-container\">\n            <h1 className=\"app-title\">InfoPulse Search</h1>\n            <div className=\"search-container\">\n                <input\n                    type=\"text\"\n                    className=\"search-input\"\n                    placeholder=\"Search for videos, articles, papers...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <button className=\"search-button\" onClick={handleSearch}>\n                    Search\n                </button>\n            </div>\n            <div className=\"results-container\">\n                {results.map((result, index) => (\n                    <ResultCard key={index} result={result} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}