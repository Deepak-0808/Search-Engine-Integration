{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ideep\\\\OneDrive\\\\Desktop\\\\New folder\\\\InfoPulse\\\\frontend\\\\src\\\\components\\\\ResultCard.js\";\nimport React from 'react';\nimport './ResultCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResultCard = ({\n  result\n}) => {\n  var _result$snippet, _result$snippet2, _result$id;\n  const title = result.title || ((_result$snippet = result.snippet) === null || _result$snippet === void 0 ? void 0 : _result$snippet.title) || 'No title available';\n  const description = result.description || ((_result$snippet2 = result.snippet) === null || _result$snippet2 === void 0 ? void 0 : _result$snippet2.description) || 'No description available';\n  const url = result.url || result.link && result.link || ((_result$id = result.id) === null || _result$id === void 0 ? void 0 : _result$id.videoId) && `https://www.youtube.com/watch?v=${result.id.videoId}`;\n\n  // If essential fields are missing, don't render the card\n  if (!title || !url) {\n    return null;\n  }\n  const getLinkText = () => {\n    switch (result.type) {\n      case 'youtube':\n        return 'Watch Video';\n      case 'google':\n        return 'Read More';\n      case 'blog':\n        return 'Read Blog';\n      case 'paper':\n        return 'View Paper';\n      default:\n        return 'Visit Link';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      children: getLinkText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = ResultCard;\nexport default ResultCard;\nvar _c;\n$RefreshReg$(_c, \"ResultCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ResultCard","result","_result$snippet","_result$snippet2","_result$id","title","snippet","description","url","link","id","videoId","getLinkText","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/ideep/OneDrive/Desktop/New folder/InfoPulse/frontend/src/components/ResultCard.js"],"sourcesContent":["import React from 'react';\r\nimport './ResultCard.css';\r\n\r\nconst ResultCard = ({ result }) => {\r\n    const title = result.title || result.snippet?.title || 'No title available';\r\n    const description = result.description || result.snippet?.description || 'No description available';\r\n    const url = result.url || (result.link && result.link) || (result.id?.videoId && `https://www.youtube.com/watch?v=${result.id.videoId}`);\r\n\r\n    // If essential fields are missing, don't render the card\r\n    if (!title || !url) {\r\n        return null;\r\n    }\r\n\r\n    const getLinkText = () => {\r\n        switch (result.type) {\r\n            case 'youtube':\r\n                return 'Watch Video';\r\n            case 'google':\r\n                return 'Read More';\r\n            case 'blog':\r\n                return 'Read Blog';\r\n            case 'paper':\r\n                return 'View Paper';\r\n            default:\r\n                return 'Visit Link';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"result-card\">\r\n            <h3>{title}</h3>\r\n            <p>{description}</p>\r\n            <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                {getLinkText()}\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,UAAA;EAC/B,MAAMC,KAAK,GAAGJ,MAAM,CAACI,KAAK,MAAAH,eAAA,GAAID,MAAM,CAACK,OAAO,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBG,KAAK,KAAI,oBAAoB;EAC3E,MAAME,WAAW,GAAGN,MAAM,CAACM,WAAW,MAAAJ,gBAAA,GAAIF,MAAM,CAACK,OAAO,cAAAH,gBAAA,uBAAdA,gBAAA,CAAgBI,WAAW,KAAI,0BAA0B;EACnG,MAAMC,GAAG,GAAGP,MAAM,CAACO,GAAG,IAAKP,MAAM,CAACQ,IAAI,IAAIR,MAAM,CAACQ,IAAK,IAAK,EAAAL,UAAA,GAAAH,MAAM,CAACS,EAAE,cAAAN,UAAA,uBAATA,UAAA,CAAWO,OAAO,KAAI,mCAAmCV,MAAM,CAACS,EAAE,CAACC,OAAO,EAAG;;EAExI;EACA,IAAI,CAACN,KAAK,IAAI,CAACG,GAAG,EAAE;IAChB,OAAO,IAAI;EACf;EAEA,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACtB,QAAQX,MAAM,CAACY,IAAI;MACf,KAAK,SAAS;QACV,OAAO,aAAa;MACxB,KAAK,QAAQ;QACT,OAAO,WAAW;MACtB,KAAK,MAAM;QACP,OAAO,WAAW;MACtB,KAAK,OAAO;QACR,OAAO,YAAY;MACvB;QACI,OAAO,YAAY;IAC3B;EACJ,CAAC;EAED,oBACId,OAAA;IAAKe,SAAS,EAAC,aAAa;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAKV;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBpB,OAAA;MAAAgB,QAAA,EAAIR;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpB,OAAA;MAAGqB,IAAI,EAAEZ,GAAI;MAACa,MAAM,EAAC,QAAQ;MAACC,GAAG,EAAC,qBAAqB;MAAAP,QAAA,EAClDH,WAAW,CAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACI,EAAA,GAlCIvB,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}