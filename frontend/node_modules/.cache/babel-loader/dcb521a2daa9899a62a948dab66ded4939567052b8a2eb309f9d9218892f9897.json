{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [youtubeResults, setYoutubeResults] = useState([]);\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [loading, setLoading] = useState(false); // Loading state\n//   const [error, setError] = useState(''); // Error state\n\n//   const handleSearch = async () => {\n//     // Prevent empty search\n//     if (!searchTerm.trim()) {\n//       alert('Please enter a search term');\n//       return;\n//     }\n\n//     setLoading(true); // Start loading\n//     setError(''); // Clear previous errors\n\n//     try {\n//       // Fetch YouTube Data\n//       const youtubeResponse = await axios.get(\n//         `http://localhost:5000/api/search/youtube`, \n//         { params: { q: searchTerm } }\n//       );\n//       setYoutubeResults(youtubeResponse.data);\n\n//       // Fetch Google Custom Search Data\n//       const searchResponse = await axios.get(\n//         `http://localhost:5000/api/search/google`,\n//         { params: { q: searchTerm } }\n//       );\n//       setSearchResults(searchResponse.data);\n//     } catch (error) {\n//       console.error('Error fetching data', error);\n//       setError('Failed to fetch data. Please try again later.');\n//     } finally {\n//       setLoading(false); // Stop loading\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1 className=\"app-title\">InfoPulse Search</h1>\n//       <div className=\"search-container\">\n//         <input\n//           type=\"text\"\n//           className=\"search-input\"\n//           placeholder=\"Search for videos, articles, papers...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n//       </div>\n\n//       {/* Loading Indicator */}\n//       {loading && <p>Loading...</p>}\n\n//       {/* Error Message */}\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       <div className=\"results-container\">\n//         <h2>YouTube Results</h2>\n//         {youtubeResults.length > 0 ? (\n//           youtubeResults.map((video) => (\n//             <div key={video.id.videoId} className=\"result-card\">\n//               <h3>{video.snippet.title}</h3>\n//               <p>{video.snippet.description}</p>\n//               <a\n//                 href={`https://www.youtube.com/watch?v=${video.id.videoId}`}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//               >\n//                 Watch Video\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No YouTube results found.</p>\n//         )}\n\n//         <h2>Search Results</h2>\n//         {searchResults.length > 0 ? (\n//           searchResults.map((result) => (\n//             <div key={result.link} className=\"result-card\">\n//               <h3>{result.title}</h3>\n//               <p>{result.snippet}</p>\n//               <a href={result.link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 Read More\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No search results found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import ResultCard from './components/ResultCard'; // New component for result cards\n\n// function App() {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [results, setResults] = useState([]);\n\n//     const handleSearch = async () => {\n//         try {\n//             const response = await axios.get(`http://localhost:5000/api/search/all`, {\n//                 params: { q: searchTerm }\n//             });\n//             console.log(\"app.js res\",response);\n//             setResults(response.data);\n//         } catch (error) {\n//             console.error('Error fetching data', error);\n//         }\n//     };\n\n//     return (\n//         <div className=\"app-container\">\n//             <h1 className=\"app-title\">InfoPulse Search</h1>\n//             <div className=\"search-container\">\n//                 <input\n//                     type=\"text\"\n//                     className=\"search-input\"\n//                     placeholder=\"Search for videos, articles, papers...\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                 />\n//                 <button className=\"search-button\" onClick={handleSearch}>\n//                     Search\n//                 </button>\n//             </div>\n//             <div className=\"results-container\">\n//                 {results.map((result, index) => (\n//                     <ResultCard key={index} result={result} />\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/ideep/OneDrive/Desktop/New folder/InfoPulse/frontend/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n\n// function App() {\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [youtubeResults, setYoutubeResults] = useState([]);\n//   const [searchResults, setSearchResults] = useState([]);\n//   const [loading, setLoading] = useState(false); // Loading state\n//   const [error, setError] = useState(''); // Error state\n\n//   const handleSearch = async () => {\n//     // Prevent empty search\n//     if (!searchTerm.trim()) {\n//       alert('Please enter a search term');\n//       return;\n//     }\n\n//     setLoading(true); // Start loading\n//     setError(''); // Clear previous errors\n\n//     try {\n//       // Fetch YouTube Data\n//       const youtubeResponse = await axios.get(\n//         `http://localhost:5000/api/search/youtube`, \n//         { params: { q: searchTerm } }\n//       );\n//       setYoutubeResults(youtubeResponse.data);\n\n//       // Fetch Google Custom Search Data\n//       const searchResponse = await axios.get(\n//         `http://localhost:5000/api/search/google`,\n//         { params: { q: searchTerm } }\n//       );\n//       setSearchResults(searchResponse.data);\n//     } catch (error) {\n//       console.error('Error fetching data', error);\n//       setError('Failed to fetch data. Please try again later.');\n//     } finally {\n//       setLoading(false); // Stop loading\n//     }\n//   };\n\n//   return (\n//     <div className=\"app-container\">\n//       <h1 className=\"app-title\">InfoPulse Search</h1>\n//       <div className=\"search-container\">\n//         <input\n//           type=\"text\"\n//           className=\"search-input\"\n//           placeholder=\"Search for videos, articles, papers...\"\n//           value={searchTerm}\n//           onChange={(e) => setSearchTerm(e.target.value)}\n//         />\n//         <button className=\"search-button\" onClick={handleSearch}>\n//           Search\n//         </button>\n//       </div>\n\n//       {/* Loading Indicator */}\n//       {loading && <p>Loading...</p>}\n\n//       {/* Error Message */}\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       <div className=\"results-container\">\n//         <h2>YouTube Results</h2>\n//         {youtubeResults.length > 0 ? (\n//           youtubeResults.map((video) => (\n//             <div key={video.id.videoId} className=\"result-card\">\n//               <h3>{video.snippet.title}</h3>\n//               <p>{video.snippet.description}</p>\n//               <a\n//                 href={`https://www.youtube.com/watch?v=${video.id.videoId}`}\n//                 target=\"_blank\"\n//                 rel=\"noopener noreferrer\"\n//               >\n//                 Watch Video\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No YouTube results found.</p>\n//         )}\n\n//         <h2>Search Results</h2>\n//         {searchResults.length > 0 ? (\n//           searchResults.map((result) => (\n//             <div key={result.link} className=\"result-card\">\n//               <h3>{result.title}</h3>\n//               <p>{result.snippet}</p>\n//               <a href={result.link} target=\"_blank\" rel=\"noopener noreferrer\">\n//                 Read More\n//               </a>\n//             </div>\n//           ))\n//         ) : (\n//           !loading && <p>No search results found.</p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './App.css';\n// import ResultCard from './components/ResultCard'; // New component for result cards\n\n// function App() {\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const [results, setResults] = useState([]);\n\n//     const handleSearch = async () => {\n//         try {\n//             const response = await axios.get(`http://localhost:5000/api/search/all`, {\n//                 params: { q: searchTerm }\n//             });\n//             console.log(\"app.js res\",response);\n//             setResults(response.data);\n//         } catch (error) {\n//             console.error('Error fetching data', error);\n//         }\n//     };\n\n//     return (\n//         <div className=\"app-container\">\n//             <h1 className=\"app-title\">InfoPulse Search</h1>\n//             <div className=\"search-container\">\n//                 <input\n//                     type=\"text\"\n//                     className=\"search-input\"\n//                     placeholder=\"Search for videos, articles, papers...\"\n//                     value={searchTerm}\n//                     onChange={(e) => setSearchTerm(e.target.value)}\n//                 />\n//                 <button className=\"search-button\" onClick={handleSearch}>\n//                     Search\n//                 </button>\n//             </div>\n//             <div className=\"results-container\">\n//                 {results.map((result, index) => (\n//                     <ResultCard key={index} result={result} />\n//                 ))}\n//             </div>\n//         </div>\n//     );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}